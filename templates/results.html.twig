{% extends "base.html.twig" %}

{% block stylesheets %}
    {{ parent() }}
    {#    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@latest/dist/style.css" rel="stylesheet" type="text/css"> #}
    {#    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/simple-datatables@8.0.0/dist/column_filter.min.css"> #}

    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/2.2.0/css/searchPanes.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.7.0/css/select.dataTables.min.css">

{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="module">
        import bootstrap from 'https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/+esm'
        import "https://cdn.jsdelivr.net/npm/jquery@3.7.1/+esm";

        import DataTables from "https://cdn.jsdelivr.net/npm/datatables.net-bs5@1.13.7/+esm";
        import "https://cdn.jsdelivr.net/npm/datatables.net-searchpanes-bs5@2.2.0/+esm";
        import "https://cdn.jsdelivr.net/npm/datatables.net-select-bs5@1.7.0/+esm";

        let el = document.getElementById('crawler-table');
        let table = new DataTables(el, {
            searchPanes: {
                layout: 'columns-1'
            },
            dom: '<"dtsp-dataTable"frtip>',
            pageLength: 5
        });
        table.searchPanes();
        document.querySelector("div.dtsp-verticalPanes").appendChild(table.searchPanes.container()[0]);

    </script>
    {#
    /* document.querySelector
    import "https://code.jquery.com/jquery-3.7.0.js";
    import DataTables from "https://cdn.jsdelivr.net/npm/datatables.net-bs5@1.13.7/+esm";
    import "https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js";
    import "https://cdn.datatables.net/searchpanes/2.2.0/js/dataTables.searchPanes.min.js";
    import "https://cdn.datatables.net/select/1.7.0/js/dataTables.select.min.js";
          // "datatables.net-select": "https://cdn.jsdelivr.net/npm/datatables.net-select@1.7.0/+esm",
          // "datatables.net-select-bs5": "https://cdn.jsdelivr.net/npm/datatables.net-select-bs5@1.7.0/+esm"
    // new DataTable('#crawler-table', {
    //   dom: 'Plfrtip'
    // });
    let table = new DataTables('#crawler-table', {
      searchPanes: {
        layout: 'columns-1'
      },
      dom: '<"dtsp-dataTable"frtip>P',
      pageLength: 10
    });
    table.searchPanes();
    document.querySelector("div.dtsp-verticalPanes").appendChild(
      table.searchPanes.container()[0]
    );

</script>
    #}
{% endblock %}
{% block body %}

    {{ crawlerConfig|json_encode }}

    <div class="dtsp-verticalContainer row">
        <div class="dtsp-verticalPanes col-3"></div>
        <div class="container col-9">
            {# if we have grid bundle installed, this would be very easy.  But we don't want to require it. we could put the table utility in core, though #}
            <table id="crawler-table">
                <thead>
                <tr>
                    <th>User</th>
                    <th>URL</th>
                    <th>Found On</th>
                    <th>route</th>
                </tr>
                </thead>
                <tbody>
                {% for d in tableData %}
                    <tr>
                        <td>{{ d.user }}</td>
                        <td data-search="{{ d.path }}"><a href="{{ d.path }}">{{ d.path }}</a></td>
                        <td><a href="{{ d.foundOn }}">{{ d.foundOn }}</a></td>
                        <td>{{ d.route }}</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>

{% endblock %}

{% block oldWay %}
    {% for header, data in crawldata %}
        {#        {{ loop.index == 1 ? dump(data) }} #}
        <h3>{{ header }}</h3>
        <table id="crawler-table" class="simple-datatables">
            <thead>
            <tr>
                <th>URL</th>
                <th>Found On</th>
                <th>route</th>
            </tr>
            </thead>
            <tbody>
            {% for d in data %}
                <tr>
                    <td><a href="{{ d.path }}">{{ d.path }}</a></td>
                    <td><a href="{{ d.foundOn }}">{{ d.foundOn }}</a></td>
                    <td>{{ d.route }}</td>
                </tr>
            {% endfor %}
            </tbody>
        </table>
    {% endfor %}

    {#    {% for header, data in crawldata %} #}
    {#        <h3>{{ header }}</h3> #}
    {#        <div class="row"> #}
    {#            {% component grid with { #}
    {#                data: data, #}
    {#                caller: _self, #}
    {#                columns: [ #}
    {#                    {name: 'path'}, #}
    {#                    'route', #}
    {#                    'statusCode', #}
    {#                    'rp' #}
    {#                ] #}
    {#            } %} #}
    {#                {% block path %} #}
    {#                    {{ row.path }} #}
    {#                {% endblock %} #}
    {#                {% block rp %} #}
    {#                    {{ row.rp|json_encode }} #}
    {#                {% endblock %} #}


    {#            {% endcomponent %} #}
    {#        </div> #}
    {#    {% endfor %} #}


{% endblock %}
